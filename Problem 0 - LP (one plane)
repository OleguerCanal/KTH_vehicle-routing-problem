set TIMESLOTS; #time
set TIMESLOTS1;
set ORIGIN;
set DESTINATION;
param SEATS; #number of seats
param AIRTIME {i in ORIGIN, j in DESTINATION};
param TIME;
param S1 {i in ORIGIN};
param S2 {i in ORIGIN};
param S3 {i in ORIGIN};
param S4 {i in ORIGIN};
param S5 {i in ORIGIN};
param E1 {i in DESTINATION};
param E2 {i in DESTINATION};
param E3 {i in DESTINATION};
param E4 {i in DESTINATION};
param E5 {i in DESTINATION};

var x {i in ORIGIN, j in DESTINATION, t in TIMESLOTS} binary; #flight for each timeslot

var m1 {i in ORIGIN, j in DESTINATION, t in TIMESLOTS} binary; #person's destination at each timeslot
var m2 {i in ORIGIN, j in DESTINATION, t in TIMESLOTS} binary; #person's destination at each timeslot
var m3 {i in ORIGIN, j in DESTINATION, t in TIMESLOTS} binary; #person's destination at each timeslot
var m4 {i in ORIGIN, j in DESTINATION, t in TIMESLOTS} binary; #person's destination at each timeslot
var m5 {i in ORIGIN, j in DESTINATION, t in TIMESLOTS} binary; #person's destination at each timeslot

maximize profit: #number of filled seats*flytime*if flight occured
	sum {i in ORIGIN, j in DESTINATION, t in TIMESLOTS} (
	AIRTIME[i,j]*m1[i,j,t]*E1[j]*x[i,j,t]+AIRTIME[i,j]*m2[i,j,t]*x[i,j,t]*E2[j]+AIRTIME[i,j]*m3[i,j,t]*x[i,j,t]*E3[j]
	+AIRTIME[i,j]*m4[i,j,t]*x[i,j,t]*E4[j]+AIRTIME[i,j]*m5[i,j,t]*x[i,j,t]*E5[j]);

s.t. maxflights: #cannot take more flights than timeslots
    sum {i in ORIGIN, j in DESTINATION, t in TIMESLOTS} x[i,j,t] <= 3;

s.t. time: #cannot exceed deadline
	sum {i in ORIGIN, j in DESTINATION, t in TIMESLOTS} x[i,j,t]*AIRTIME[i,j] <= TIME;

s.t. origin {j in DESTINATION, t in TIMESLOTS1}: #next flight must leave from previous destinations
	sum {i in ORIGIN} x[i,j,t] - sum {k in DESTINATION} x[j,k,t+1] = 0;

s.t. oneflight {t in TIMESLOTS}:
	sum {i in ORIGIN, j in DESTINATION} x[i,j,t] <= 1;
	
#s.t. correctend1 {j in DESTINATION, t in TIMESLOTS}:
#	sum {i in ORIGIN} m1[i,j,t] = sum {i in ORIGIN} x[i,j,t]*E1[j];
#s.t. correctend2 {j in DESTINATION, t in TIMESLOTS}:
#	sum {i in ORIGIN} m2[i,j,t] = sum {i in ORIGIN} x[i,j,t]*E2[j];
#s.t. correctend3 {j in DESTINATION, t in TIMESLOTS}:
#	sum {i in ORIGIN} m3[i,j,t] = sum {i in ORIGIN} x[i,j,t]*E3[j];
#s.t. correctend4 {j in DESTINATION, t in TIMESLOTS}:
#	sum {i in ORIGIN} m4[i,j,t] = sum {i in ORIGIN} x[i,j,t]*E4[j];
#s.t. correctend5 {j in DESTINATION, t in TIMESLOTS}:
#	sum {i in ORIGIN} m5[i,j,t] = sum {i in ORIGIN} x[i,j,t]*E5[j];

s.t. correctstart1 {i in ORIGIN, t in TIMESLOTS}:
	sum {j in DESTINATION} m1[i,j,t] = sum {j in DESTINATION} x[i,j,t]*S1[i];
s.t. correctstart2 {i in ORIGIN, t in TIMESLOTS}:
	sum {j in DESTINATION} m2[i,j,t] = sum {j in DESTINATION} x[i,j,t]*S2[i];
s.t. correctstart3 {i in ORIGIN, t in TIMESLOTS}:
	sum {j in DESTINATION} m3[i,j,t] = sum {j in DESTINATION} x[i,j,t]*S3[i];
s.t. correctstart4 {i in ORIGIN, t in TIMESLOTS}:
	sum {j in DESTINATION} m4[i,j,t] = sum {j in DESTINATION} x[i,j,t]*S4[i];
s.t. correctstart5 {i in ORIGIN, t in TIMESLOTS}:
	sum {j in DESTINATION} m5[i,j,t] = sum {j in DESTINATION} x[i,j,t]*S5[i];
	
s.t. stop1:
	if (sum {i in ORIGIN, j in DESTINATION, t in TIMESLOTS1} m1[i,j,t]*E1[j] = 1) then sum {i in ORIGIN, j in DESTINATION, t in TIMESLOTS1} m1[i,j,t+1] = 0;
s.t. stop2:
	if (sum {i in ORIGIN, j in DESTINATION, t in TIMESLOTS1} m2[i,j,t]*E2[j] = 1) then sum {i in ORIGIN, j in DESTINATION, t in TIMESLOTS1} m2[i,j,t+1] = 0;
s.t. stop3:
	if (sum {i in ORIGIN, j in DESTINATION, t in TIMESLOTS1} m3[i,j,t]*E3[j] = 1) then sum {i in ORIGIN, j in DESTINATION, t in TIMESLOTS1} m3[i,j,t+1] = 0;
s.t. stop4:
	if (sum {i in ORIGIN, j in DESTINATION, t in TIMESLOTS1} m4[i,j,t]*E4[j] = 1) then sum {i in ORIGIN, j in DESTINATION, t in TIMESLOTS1} m4[i,j,t+1] = 0;
s.t. stop5:
	if (sum {i in ORIGIN, j in DESTINATION, t in TIMESLOTS1} m5[i,j,t]*E5[j] = 1) then sum {i in ORIGIN, j in DESTINATION, t in TIMESLOTS1} m5[i,j,t+1] = 0;
	
s.t. oneloc1 {t in TIMESLOTS}:
	sum {i in ORIGIN, j in DESTINATION} m1[i,j,t] <=1;
s.t. oneloc2 {t in TIMESLOTS}:
	sum {i in ORIGIN, j in DESTINATION} m2[i,j,t] <=1;
s.t. oneloc3 {t in TIMESLOTS}:
	sum {i in ORIGIN, j in DESTINATION} m3[i,j,t] <=1;
s.t. oneloc4 {t in TIMESLOTS}:
	sum {i in ORIGIN, j in DESTINATION} m4[i,j,t] <=1;
s.t. oneloc5 {t in TIMESLOTS}:
	sum {i in ORIGIN, j in DESTINATION} m5[i,j,t] <=1;

s.t. solve {t in TIMESLOTS}:
	sum {i in ORIGIN, j in DESTINATION} x[i,j,t] >= 1;	

s.t. xvar1:
	sum {i in ORIGIN, j in DESTINATION, t in TIMESLOTS} m1[i,j,t]*x[i,j,t] 
	= sum {i in ORIGIN, j in DESTINATION, t in TIMESLOTS} m1[i,j,t];
s.t. xvar2:
	sum {i in ORIGIN, j in DESTINATION, t in TIMESLOTS} m2[i,j,t]*x[i,j,t] 
	= sum {i in ORIGIN, j in DESTINATION, t in TIMESLOTS} m2[i,j,t];
s.t. xvar3:
	sum {i in ORIGIN, j in DESTINATION, t in TIMESLOTS} m3[i,j,t]*x[i,j,t] 
	= sum {i in ORIGIN, j in DESTINATION, t in TIMESLOTS} m3[i,j,t];
s.t. xvar4:
	sum {i in ORIGIN, j in DESTINATION, t in TIMESLOTS} m4[i,j,t]*x[i,j,t] 
	= sum {i in ORIGIN, j in DESTINATION, t in TIMESLOTS} m4[i,j,t];
s.t. xvar5:
	sum {i in ORIGIN, j in DESTINATION, t in TIMESLOTS} m5[i,j,t]*x[i,j,t] 
	= sum {i in ORIGIN, j in DESTINATION, t in TIMESLOTS} m5[i,j,t];
