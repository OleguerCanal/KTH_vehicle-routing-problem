(define (domain airline)
    (:requirements :typing)
    (:types city plane people)
    (:predicates (plane-at ?x - city)
                 (people-at ?x - city)
                 (people-number))
    (:functions (add-distance ?x ?y - city)
                (add-people ?p - people ?origin ?dest -city ?n )
                (happy-people)
    )
    (:action move :parameters (?x - city ?y - city ?p1 .. ?pn - people)
                 :precondition (and (plane-at ?x) (people-at ?x)
                 :effect (and   (plane-at ?y)
                                (not (plane-at ?x))
                                )
                         )
    )
)